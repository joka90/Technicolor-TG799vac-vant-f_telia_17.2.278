From 3c1e6623eae4af620c687735ce6cc2b7180eefbc Mon Sep 17 00:00:00 2001
From: Karl Vogel <karl.vogel@technicolor.com>
Date: Mon, 26 Aug 2013 14:17:46 +0200
Subject: [PATCH] Restore Broadcom Kernel Flag defines for the fullcone patch.

---
 net/ipv4/netfilter/ipt_MASQUERADE.c |   10 ++++++++++
 1 files changed, 10 insertions(+), 0 deletions(-)

--- a/net/ipv4/netfilter/ipt_MASQUERADE.c
+++ b/net/ipv4/netfilter/ipt_MASQUERADE.c
@@ -20,21 +20,26 @@
 #include <net/checksum.h>
 #include <net/route.h>
 #include <net/netfilter/nf_nat_rule.h>
+#if defined(CONFIG_BCM_KF_NETFILTER)
 #include <net/netfilter/nf_conntrack_zones.h>
+#endif
 #include <linux/netfilter_ipv4.h>
 #include <linux/netfilter/x_tables.h>
 
+#if defined(CONFIG_BCM_KF_NETFILTER)
 #include <net/netfilter/nf_conntrack.h>
 #include <net/netfilter/nf_conntrack_core.h>
 #include <net/netfilter/nf_conntrack_helper.h>
 #include <net/netfilter/nf_nat.h>
 #include <net/netfilter/nf_nat_rule.h>
 #include <net/netfilter/nf_nat_helper.h>
+#endif
 
 MODULE_LICENSE("GPL");
 MODULE_AUTHOR("Netfilter Core Team <coreteam@netfilter.org>");
 MODULE_DESCRIPTION("Xtables: automatic-address SNAT");
 
+#if defined(CONFIG_BCM_KF_NETFILTER)
 /****************************************************************************/
 static void bcm_nat_expect(struct nf_conn *ct,
 			   struct nf_conntrack_expect *exp)
@@ -160,6 +165,7 @@ static inline struct nf_conntrack_expect
 
 	return exp;
 }
+#endif /* CONFIG_KF_NETFILTER */
 
 /* FIXME: Multiple targets. --RR */
 static int masquerade_tg_check(const struct xt_tgchk_param *par)
@@ -212,6 +218,7 @@ masquerade_tg(struct sk_buff *skb, const
 
 	nat->masq_index = par->out->ifindex;
 
+#if defined(CONFIG_BCM_KF_NETFILTER)
 	if (mr->range[0].min_ip != 0 /* nat_mode == full cone */
 	    && (nfct_help(ct) == NULL || nfct_help(ct)->helper == NULL)
 	    && nf_ct_protonum(ct) == IPPROTO_UDP) {
@@ -274,6 +281,7 @@ masquerade_tg(struct sk_buff *skb, const
 		}
 		return ret;
 	}
+#endif /* CONFIG_KF_NETFILTER */
 
 	/* Transfer from original range. */
 	newrange = ((struct nf_nat_ipv4_range)
@@ -361,7 +369,9 @@ static int __init masquerade_tg_init(voi
 
 static void __exit masquerade_tg_exit(void)
 {
+#if defined(CONFIG_BCM_KF_NETFILTER)
 	nf_conntrack_helper_unregister(&nf_conntrack_helper_bcm_nat);
+#endif
 	xt_unregister_target(&masquerade_tg_reg);
 	unregister_netdevice_notifier(&masq_dev_notifier);
 	unregister_inetaddr_notifier(&masq_inet_notifier);
